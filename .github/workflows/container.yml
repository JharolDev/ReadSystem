name: Snyk Dockerfile Analysis

on:
  workflow_dispatch:
    inputs:
      severity_threshold:
        description: 'Nivel de severidad (low/medium/high)'
        required: true
        default: 'low'
        type: choice
        options:
          - low
          - medium
          - high

jobs:
  analyze-and-remediate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Initial Snyk Scan
        id: initial-scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: |
            --severity-threshold=${{ inputs.severity_threshold }}
            --project-name=dockerfile-analysis
            --org=jharoldev
            --json-file-output=initial-scan.json

      - name: Analyze Results
        id: analyze
        run: |
          if [ -f "initial-scan.json" ]; then
            echo "VULNERABILITIES_FOUND=$(cat initial-scan.json | jq '.vulnerabilities | length')" >> $GITHUB_ENV
          fi

      - name: Auto Remediation Attempt
        if: env.VULNERABILITIES_FOUND > 0
        run: |
          # Backup original Dockerfile
          cp Dockerfile Dockerfile.backup
          
          # Aplicar correcciones automáticas comunes
          sed -i 's/^FROM.*:latest/FROM node:18-alpine/' Dockerfile
          sed -i '/^USER root/d' Dockerfile
          echo "USER node" >> Dockerfile
          
          # Agregar buenas prácticas de seguridad
          echo "HEALTHCHECK CMD curl --fail http://localhost:3000 || exit 1" >> Dockerfile

      - name: Verification Scan
        if: env.VULNERABILITIES_FOUND > 0
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: |
            --severity-threshold=${{ inputs.severity_threshold }}
            --project-name=dockerfile-analysis-remediated
            --org=jharoldev
            --json-file-output=final-scan.json

      - name: Compare Results
        if: env.VULNERABILITIES_FOUND > 0
        run: |
          initial_vulns=$(cat initial-scan.json | jq '.vulnerabilities | length')
          final_vulns=$(cat final-scan.json | jq '.vulnerabilities | length')
          
          echo "Initial vulnerabilities: $initial_vulns"
          echo "Final vulnerabilities: $final_vulns"
          
          if [ $final_vulns -lt $initial_vulns ]; then
            echo "✅ Mejoras aplicadas exitosamente"
            mv Dockerfile.backup Dockerfile.original
          else
            echo "⚠️ No se logró mejorar la seguridad"
            mv Dockerfile.backup Dockerfile
          fi

      - name: Upload Reports
        uses: actions/upload-artifact@v4
        with:
          name: snyk-analysis-reports
          path: |
            initial-scan.json
            final-scan.json
